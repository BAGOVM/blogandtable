{"ast":null,"code":"import _initializerDefineProperty from \"E:/blogandtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"E:/blogandtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"E:/blogandtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor;\n\nimport { observable, computed, action } from 'mobx';\nlet ConverterStore = (_class = class ConverterStore {\n  constructor() {\n    _initializerDefineProperty(this, \"selectedCoin\", _descriptor, this);\n  }\n\n  get getSelectedCoin() {\n    return this.selectedCoin;\n  }\n\n  setSelectedCoin(coin) {\n    this.selectedCoin = {\n      name: coin.name,\n      price: coin.price\n    };\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"selectedCoin\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      name: '',\n      price: 0\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getSelectedCoin\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"getSelectedCoin\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setSelectedCoin\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setSelectedCoin\"), _class.prototype)), _class);\nexport default ConverterStore;","map":{"version":3,"sources":["E:/blogandtable/src/store/converterStore.ts"],"names":["observable","computed","action","ConverterStore","getSelectedCoin","selectedCoin","setSelectedCoin","coin","name","price"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,MAA7C;IAGMC,c,aAAN,MAAMA,cAAN,CAAqB;AAAA;AAAA;AAAA;;AAOA,MAAfC,eAAe,GAAG;AACpB,WAAO,KAAKC,YAAZ;AACD;;AAGDC,EAAAA,eAAe,CAACC,IAAD,EAAc;AAC3B,SAAKF,YAAL,GAAoB;AAClBG,MAAAA,IAAI,EAAED,IAAI,CAACC,IADO;AAElBC,MAAAA,KAAK,EAAEF,IAAI,CAACE;AAFM,KAApB;AAID;;AAjBkB,C,8EAClBT,U;;;;;WAAiD;AAChDQ,MAAAA,IAAI,EAAE,EAD0C;AAEhDC,MAAAA,KAAK,EAAE;AAFyC,K;;oEAKjDR,Q,4JAKAC,M;AASH,eAAeC,cAAf","sourcesContent":["import { observable, computed, action } from 'mobx';\r\nimport { TCoin, TSelectedCoin } from '../types';\r\n\r\nclass ConverterStore {\r\n  @observable private selectedCoin: TSelectedCoin = {\r\n    name: '',\r\n    price: 0,\r\n  };\r\n\r\n  @computed\r\n  get getSelectedCoin() {\r\n    return this.selectedCoin;\r\n  }\r\n\r\n  @action\r\n  setSelectedCoin(coin: TCoin) {\r\n    this.selectedCoin = {\r\n      name: coin.name,\r\n      price: coin.price,\r\n    };\r\n  }\r\n}\r\n\r\nexport default ConverterStore;"]},"metadata":{},"sourceType":"module"}