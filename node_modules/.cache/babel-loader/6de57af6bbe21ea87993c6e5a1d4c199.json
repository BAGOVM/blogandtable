{"ast":null,"code":"var _jsxFileName = \"E:\\\\blogandtable\\\\src\\\\containers\\\\BlogPage\\\\BlogPage.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport './BlogPage.css';\nimport AddPostForm from './components/AddPostForm';\nimport BlogCard from './components/BlogCard';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditPostForm from './components/EditPostForm';\nimport { postsUrl } from '../../shared/projectData';\nimport Header from '../../components/Header/Header';\nimport { Pagination } from 'antd';\nimport CryptoTable from \"../../components/CryptoTable/CryptoTable\";\nimport { useStyles } from '../../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet source;\n\nconst BlogPage = ({\n  userName,\n  isLoggedIn,\n  setIsLoggedIn\n}) => {\n  _s();\n\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [blogArr, setBlogArr] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const [selectedPost, setSelectedPost] = useState({});\n  const history = useHistory();\n  const location = useLocation();\n  const [totalElementsCount, setTotalElementsCount] = useState(0);\n  const [currentPageElements, setCurrentPageElements] = useState([]);\n  let nedValue = location === null || location === void 0 ? void 0 : location.search.split('=')[1];\n  const elementsPerPage = 2;\n  const [offset, setOffset] = useState(nedValue * elementsPerPage || 0);\n  const pagesCount = Math.ceil(totalElementsCount / elementsPerPage);\n  const classes = useStyles();\n\n  const fetchPosts = () => {\n    source = axios.CancelToken.source();\n    axios.get(postsUrl, {\n      cancelToken: source.token\n    }).then(response => {\n      setBlogArr(response.data);\n      setTotalElementsCount(response.data.length);\n      setCurrentPageElements(response.data.slice(offset, offset + elementsPerPage));\n      setIsPending(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handlePageClick = pageNumber => {\n    const offset = (pageNumber - 1) * elementsPerPage;\n    history.push(`/blog?page=${pageNumber}`);\n    setOffset(offset);\n    setCurrentPageElements(blogArr.slice(offset, offset + elementsPerPage));\n  };\n\n  console.log(offset);\n  useEffect(() => {\n    fetchPosts();\n    return () => {\n      if (source) {\n        source.cancel('Axios get canceled');\n      }\n    };\n  });\n\n  const deletePost = blogPost => {\n    if (window.confirm(`Удалить ${blogPost.title}?`)) {\n      setIsPending(true);\n      axios.delete(`${postsUrl}${blogPost.id}`).then(response => {\n        console.log('Пост удален => ', response.data);\n        fetchPosts();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const addNewBlogPost = blogPost => {\n    setIsPending(true);\n    axios.post(postsUrl, blogPost).then(response => {\n      console.log('Пост создан =>', response.data);\n      fetchPosts();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const editBlogPost = updatedBlogPost => {\n    setIsPending(true);\n    axios.put(`${postsUrl}${updatedBlogPost.id}`, updatedBlogPost).then(response => {\n      console.log('Пост отредактирован =>', response.data);\n      fetchPosts();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleAddFormShow = () => setShowAddForm(true);\n\n  const handleAddFormHide = () => setShowAddForm(false);\n\n  const handleEditFormShow = () => setShowEditForm(true);\n\n  const handleEditFormHide = () => setShowEditForm(false);\n\n  const handleSelectPost = blogPost => setSelectedPost(blogPost);\n\n  const isAdmin = isLoggedIn && userName === 'admin';\n  const blogPosts = currentPageElements.map(item => {\n    return /*#__PURE__*/_jsxDEV(BlogCard, {\n      title: item === null || item === void 0 ? void 0 : item.title,\n      description: item === null || item === void 0 ? void 0 : item.description,\n      date: item === null || item === void 0 ? void 0 : item.date,\n      deletePost: () => deletePost(item),\n      handleEditFormShow: handleEditFormShow,\n      handleSelectPost: () => handleSelectPost(item),\n      isAdmin: isAdmin\n    }, item === null || item === void 0 ? void 0 : item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  });\n  if (currentPageElements.length === 0) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 48\n  }, this);\n  const postsOpactiy = isPending ? 0.5 : 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userName: userName,\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blogPage\",\n      children: [showAddForm && /*#__PURE__*/_jsxDEV(AddPostForm //@ts-ignore\n      , {\n        blogArr: blogArr,\n        addNewBlogPost: addNewBlogPost,\n        handleAddFormHide: handleAddFormHide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), showEditForm && /*#__PURE__*/_jsxDEV(EditPostForm, {\n        handleEditFormHide: handleEditFormHide,\n        selectedPost: selectedPost,\n        editBlogPost: editBlogPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0411\\u043B\\u043E\\u0433\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addNewPost\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"blackBtn\",\n            onClick: handleAddFormShow,\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posts\",\n          style: {\n            opacity: postsOpactiy\n          },\n          children: [blogPosts, pagesCount > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n            defaultCurrent: (location === null || location === void 0 ? void 0 : location.search.split('=')[1]) || 1,\n            onChange: handlePageClick,\n            total: totalElementsCount,\n            pageSize: elementsPerPage,\n            showSizeChanger: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CryptoTable, {\n          classes: classes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), isPending && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          className: \"preloader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BlogPage, \"Yqgj2MN2PouQ+VbOvrsDlJudwBU=\", false, function () {\n  return [useHistory, useLocation, useStyles];\n});\n\n_c = BlogPage;\nexport default BlogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"sources":["E:/blogandtable/src/containers/BlogPage/BlogPage.tsx"],"names":["axios","React","useEffect","useState","useHistory","useLocation","AddPostForm","BlogCard","CircularProgress","EditPostForm","postsUrl","Header","Pagination","CryptoTable","useStyles","source","BlogPage","userName","isLoggedIn","setIsLoggedIn","showAddForm","setShowAddForm","showEditForm","setShowEditForm","blogArr","setBlogArr","isPending","setIsPending","selectedPost","setSelectedPost","history","location","totalElementsCount","setTotalElementsCount","currentPageElements","setCurrentPageElements","nedValue","search","split","elementsPerPage","offset","setOffset","pagesCount","Math","ceil","classes","fetchPosts","CancelToken","get","cancelToken","token","then","response","data","length","slice","catch","err","console","log","handlePageClick","pageNumber","push","cancel","deletePost","blogPost","window","confirm","title","delete","id","addNewBlogPost","post","editBlogPost","updatedBlogPost","put","handleAddFormShow","handleAddFormHide","handleEditFormShow","handleEditFormHide","handleSelectPost","isAdmin","blogPosts","map","item","description","date","postsOpactiy","opacity"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React ,{ useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport './BlogPage.css';\r\nimport AddPostForm from './components/AddPostForm';\r\nimport BlogCard from './components/BlogCard';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport EditPostForm from './components/EditPostForm';\r\nimport { postsUrl } from '../../shared/projectData';\r\nimport Header from '../../components/Header/Header';\r\nimport { Pagination } from 'antd';\r\nimport CryptoTable from \"../../components/CryptoTable/CryptoTable\";\r\nimport {useStyles} from '../../styles';\r\n\r\n\r\nlet source: any;\r\n\r\ninterface BlogPageProps{\r\n  userName: string;\r\n  isLoggedIn: boolean;\r\n  setIsLoggedIn: (blogPost: IPost) => void;\r\n}\r\n\r\nexport interface IPost{\r\n  id?: number;\r\n  title?: string;\r\n  description?: string;\r\n  date?: any;\r\n  liked?: boolean;\r\n}\r\n\r\nconst BlogPage: React.FC<BlogPageProps> = ({ userName, isLoggedIn, setIsLoggedIn }) => {\r\n\r\n  const [showAddForm, setShowAddForm] = useState<boolean>(false);\r\n  const [showEditForm, setShowEditForm] = useState<boolean>(false);\r\n  const [blogArr, setBlogArr] = useState<any[]>([]);\r\n  const [isPending, setIsPending] = useState<boolean>(false);\r\n  const [selectedPost, setSelectedPost] = useState<IPost>({});\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [totalElementsCount, setTotalElementsCount] = useState<number>(0);\r\n  const [currentPageElements, setCurrentPageElements] = useState<number[]>([])\r\n  let nedValue: any = location?.search.split('=')[1];\r\n  const elementsPerPage = 2;\r\n  const [offset, setOffset] = useState(nedValue * elementsPerPage || 0);\r\n  const pagesCount = Math.ceil(totalElementsCount / elementsPerPage);\r\n\r\n  const classes: any = useStyles();\r\n  \r\n  const fetchPosts = () => {\r\n    source = axios.CancelToken.source();\r\n    axios\r\n      .get(postsUrl, { cancelToken: source.token })\r\n      .then((response) => {\r\n        setBlogArr(response.data);\r\n        setTotalElementsCount(response.data.length);\r\n        setCurrentPageElements(response.data.slice(offset, offset + elementsPerPage))\r\n        setIsPending(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handlePageClick = (pageNumber: number) => {\r\n    const offset = (pageNumber - 1) * elementsPerPage;\r\n    history.push(`/blog?page=${pageNumber}`)\r\n    setOffset(offset);\r\n    setCurrentPageElements(blogArr.slice(offset, offset + elementsPerPage))\r\n  };\r\n\r\n  console.log(offset)\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    return () => {\r\n      if (source) {\r\n        source.cancel('Axios get canceled');\r\n      }\r\n    };\r\n  });\r\n\r\n  const deletePost = (blogPost: IPost) => {\r\n    if (window.confirm(`Удалить ${blogPost.title}?`)) {\r\n      setIsPending(true);\r\n      axios\r\n        .delete(`${postsUrl}${blogPost.id}`)\r\n        .then((response) => {\r\n          console.log('Пост удален => ', response.data);\r\n          fetchPosts();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const addNewBlogPost = (blogPost: IPost) => {\r\n    setIsPending(true);\r\n    axios\r\n      .post(postsUrl, blogPost)\r\n      .then((response) => {\r\n        console.log('Пост создан =>', response.data);\r\n        fetchPosts();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const editBlogPost = (updatedBlogPost: IPost) => {\r\n    setIsPending(true);\r\n    axios\r\n      .put(`${postsUrl}${updatedBlogPost.id}`, updatedBlogPost)\r\n      .then((response) => {\r\n        console.log('Пост отредактирован =>', response.data);\r\n        fetchPosts();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleAddFormShow = () => setShowAddForm(true);\r\n\r\n  const handleAddFormHide = () => setShowAddForm(false);\r\n\r\n  const handleEditFormShow = () => setShowEditForm(true);\r\n\r\n  const handleEditFormHide = () => setShowEditForm(false);\r\n\r\n  const handleSelectPost = (blogPost: IPost) => setSelectedPost(blogPost);\r\n\r\n  \r\n\r\n  const isAdmin = isLoggedIn && userName === 'admin';\r\n\r\n  const blogPosts = currentPageElements.map((item: any) => {\r\n    return (\r\n      <BlogCard\r\n        key={item?.id}\r\n        title={item?.title}\r\n        description={item?.description}\r\n        date={item?.date}\r\n        deletePost={() => deletePost(item)}\r\n        handleEditFormShow={handleEditFormShow}\r\n        handleSelectPost={() => handleSelectPost(item)}\r\n        isAdmin={isAdmin}\r\n      />\r\n    );\r\n  });\r\n\r\n  if (currentPageElements.length === 0) return <h1>Загружаю данные...</h1>;\r\n\r\n  const postsOpactiy = isPending ? 0.5 : 1;\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        userName={userName}\r\n        isLoggedIn={isLoggedIn}\r\n        setIsLoggedIn={setIsLoggedIn}\r\n      />\r\n      <div className='blogPage'>\r\n        \r\n        {\r\n        showAddForm && (\r\n          <AddPostForm\r\n            //@ts-ignore\r\n            blogArr={blogArr}\r\n            addNewBlogPost={addNewBlogPost}\r\n            handleAddFormHide={handleAddFormHide}\r\n          />\r\n        )}\r\n\r\n        {showEditForm && (\r\n          <EditPostForm\r\n            handleEditFormHide={handleEditFormHide}\r\n            selectedPost={selectedPost}\r\n            editBlogPost={editBlogPost}\r\n          />\r\n        )}\r\n        <>\r\n          <h1>Блог</h1>\r\n\r\n          {isAdmin && (\r\n            <div className='addNewPost'>\r\n              <button className='blackBtn' onClick={handleAddFormShow}>\r\n                Создать новый пост\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          <div className='posts' style={{ opacity: postsOpactiy }}>\r\n            {blogPosts}\r\n            {pagesCount > 1 && (\r\n              <Pagination\r\n                defaultCurrent={location?.search.split('=')[1] || 1}\r\n                onChange={handlePageClick}\r\n                total={totalElementsCount}\r\n                pageSize={elementsPerPage}\r\n                showSizeChanger={false}\r\n              />\r\n              \r\n            )}\r\n          </div>\r\n          <CryptoTable classes={classes} />\r\n          {isPending && <CircularProgress className='preloader' />}\r\n        </>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default BlogPage;"]},"metadata":{},"sourceType":"module"}