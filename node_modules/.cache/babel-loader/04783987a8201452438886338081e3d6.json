{"ast":null,"code":"var _jsxFileName = \"E:\\\\blogandtable\\\\src\\\\components\\\\CryptoTable\\\\CryptoTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoTable = inject('currenciesStore', 'converterStore')(observer(_s(({\n  classes,\n  currenciesStore,\n  converterStore\n}) => {\n  _s();\n\n  const items = currenciesStore.getItems;\n  const diffObj = currenciesStore.getDiffObj;\n  React.useEffect(() => {\n    if (currenciesStore) {\n      currenciesStore.fetchCoins();\n      setInterval(() => {\n        currenciesStore.fetchCoins();\n      }, 30 * 1000);\n    }\n  });\n\n  const onClickRow = coin => {\n    if (converterStore) {\n      converterStore.setSelectedCoin(coin);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"FullName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"volume24hour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: !items.length ? 'Загрузка...' : items.map(coin => /*#__PURE__*/_jsxDEV(TableRow, {\n          onClick: () => onClickRow(coin),\n          className: classes.rowCurrency,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: classes.currencyIcon,\n              src: coin.imageUrl,\n              alt: \"Coin icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: coin.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: coin.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: diffObj[coin.name] && classes[`${diffObj[coin.name]}Column`],\n            align: \"left\",\n            children: [\"$\", coin.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: [\"$\", coin.volume24Hour]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, coin.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")));\nexport default CryptoTable;","map":{"version":3,"sources":["E:/blogandtable/src/components/CryptoTable/CryptoTable.tsx"],"names":["React","observer","inject","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CryptoTable","classes","currenciesStore","converterStore","items","getItems","diffObj","getDiffObj","useEffect","fetchCoins","setInterval","onClickRow","coin","setSelectedCoin","table","length","map","rowCurrency","currencyIcon","imageUrl","name","fullName","price","volume24Hour"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { TCoin, TCoinDiff } from '../../types';\r\nimport ConverterStore from '../../store/converterStore';\r\nimport CurrenciesStore from '../../store/currenciesStore';\r\n\r\ntype ICryptoTable = {\r\n  classes: any;\r\n  currenciesStore?: CurrenciesStore;\r\n  converterStore?: ConverterStore;\r\n};\r\n\r\nconst CryptoTable = inject(\r\n  'currenciesStore',\r\n  'converterStore',\r\n)(\r\n  observer(({ classes, currenciesStore, converterStore }: ICryptoTable) => {\r\n    const items: TCoin[] = currenciesStore.getItems;\r\n    const diffObj: TCoinDiff = currenciesStore!.getDiffObj;\r\n\r\n    React.useEffect(() => {\r\n      if (currenciesStore) {\r\n        currenciesStore.fetchCoins();\r\n        setInterval(() => {\r\n          currenciesStore.fetchCoins();\r\n        }, 30 * 1000);\r\n      }\r\n    });\r\n\r\n    const onClickRow = (coin: TCoin) => {\r\n      if (converterStore) {\r\n        converterStore.setSelectedCoin(coin);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              <TableCell align=\"left\">Name</TableCell>\r\n              <TableCell align=\"left\">FullName</TableCell>\r\n              <TableCell align=\"left\">Price</TableCell>\r\n              <TableCell align=\"left\">volume24hour</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!items.length\r\n              ? 'Загрузка...'\r\n              : items.map((coin: TCoin) => (\r\n                  <TableRow\r\n                    onClick={() => onClickRow(coin)}\r\n                    className={classes.rowCurrency}\r\n                    hover\r\n                    key={coin.name}>\r\n                    <TableCell>\r\n                      <img className={classes.currencyIcon} src={coin.imageUrl} alt=\"Coin icon\" />\r\n                    </TableCell>\r\n                    <TableCell align=\"left\">{coin.name}</TableCell>\r\n                    <TableCell align=\"left\">{coin.fullName}</TableCell>\r\n                    <TableCell\r\n                      className={diffObj[coin.name] && classes[`${diffObj[coin.name]}Column`]}\r\n                      align=\"left\">\r\n                      ${coin.price}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\">${coin.volume24Hour}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }),\r\n);\r\n\r\nexport default CryptoTable;"]},"metadata":{},"sourceType":"module"}